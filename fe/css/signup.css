/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
}

body {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #1e3a8a 0%, #152c69 100%);
    padding: 20px;
    position: relative;
    overflow: hidden;
}

/* Animated background */
body::before {
    content: '';
    position: absolute;
    width: 150%;
    height: 150%;
    background: radial-gradient(circle, transparent 20%, #1e3a8a 20%, #1e3a8a 80%, transparent 80%, transparent),
                radial-gradient(circle, transparent 20%, #1e3a8a 20%, #1e3a8a 80%, transparent 80%, transparent) 50px 50px;
    background-size: 100px 100px;
    animation: backgroundMove 20s linear infinite;
    opacity: 0.1;
}

@keyframes backgroundMove {
    0% { transform: translateY(0) rotate(0deg); }
    100% { transform: translateY(-50%) rotate(10deg); }
}

.FormBlock {
    background: rgba(255, 255, 255, 0.95);
    padding: 3rem;
    border-radius: 20px;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
    width: 100%;
    max-width: 480px;
    position: relative;
    backdrop-filter: blur(10px);
    animation: formAppear 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
}

@keyframes formAppear {
    0% {
        opacity: 0;
        transform: translateY(40px) scale(0.95);
    }
    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

h1 {
    color: #1e3a8a;
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 2rem;
    font-weight: 700;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    position: relative;
}

h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 50px;
    height: 3px;
    background: #1e3a8a;
    border-radius: 2px;
}

form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

label {
    color: #1e3a8a;
    font-weight: 600;
    font-size: 0.95rem;
    margin-bottom: 0.5rem;
    display: block;
    transition: transform 0.3s ease;
}

.input-group {
    position: relative;
}

input {
    width: 100%;
    padding: 1rem 1.25rem;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
    outline: none;
    background: rgba(255, 255, 255, 0.9);
}

input:focus {
    border-color: #1e3a8a;
    box-shadow: 0 0 0 4px rgba(30, 58, 138, 0.1);
    transform: translateY(-2px);
}

input::placeholder {
    color: #94a3b8;
    transition: opacity 0.3s ease;
}

input:focus::placeholder {
    opacity: 0.5;
}

/* Password strength indicator */
.password-strength {
    height: 6px;
    background: #e2e8f0;
    border-radius: 3px;
    margin-top: 0.75rem;
    overflow: hidden;
    position: relative;
}

.password-strength-bar {
    height: 100%;
    width: 0;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 3px;
}

.weak { 
    width: 33.33%; 
    background: linear-gradient(90deg, #ef4444, #f87171);
}

.medium { 
    width: 66.66%; 
    background: linear-gradient(90deg, #f59e0b, #fbbf24);
}

.strong { 
    width: 100%; 
    background: linear-gradient(90deg, #22c55e, #4ade80);
}

/* Submit button */
button {
    background: linear-gradient(135deg, #1e3a8a, #2563eb);
    color: white;
    padding: 1rem;
    border: none;
    border-radius: 12px;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
    position: relative;
    overflow: hidden;
}

button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    transition: 0.5s;
}

button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(30, 58, 138, 0.3);
}

button:hover::before {
    left: 100%;
}

button:active {
    transform: translateY(1px);
}

/* Error and success states */
input.error {
    border-color: #ef4444;
    animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

@keyframes shake {
    10%, 90% { transform: translateX(-1px); }
    20%, 80% { transform: translateX(2px); }
    30%, 50%, 70% { transform: translateX(-4px); }
    40%, 60% { transform: translateX(4px); }
}

input.success {
    border-color: #22c55e;
}

/* Password tooltip */
.password-tooltip {
    background: white;
    border: 1px solid #e2e8f0;
    border-radius: 12px;
    padding: 1.25rem;
    margin-top: 0.75rem;
    font-size: 0.9rem;
    color: #64748b;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform-origin: top;
    animation: tooltipAppear 0.3s ease;
}

@keyframes tooltipAppear {
    from {
        opacity: 0;
        transform: translateY(-10px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

.password-tooltip ul {
    list-style: none;
    margin-top: 0.75rem;
}

.password-tooltip li {
    padding: 0.4rem 0;
    padding-left: 1.75rem;
    position: relative;
    transition: color 0.3s ease;
}

.password-tooltip li::before {
    content: "✗";
    position: absolute;
    left: 0;
    color: #ef4444;
    font-weight: bold;
    transition: all 0.3s ease;
}

.password-tooltip li.met {
    color: #22c55e;
}

.password-tooltip li.met::before {
    content: "✓";
    color: #22c55e;
    transform: scale(1.1);
}

/* Responsive design */
@media (max-width: 480px) {
    .FormBlock {
        padding: 2rem;
        margin: 1rem;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    input {
        padding: 0.875rem 1rem;
    }
    
    button {
        padding: 0.875rem;
    }
}

/* Loading state for button */
button.loading {
    background: #1e3a8a;
    pointer-events: none;
    position: relative;
}

button.loading::after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    top: 50%;
    left: 50%;
    margin: -10px 0 0 -10px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top-color: white;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}